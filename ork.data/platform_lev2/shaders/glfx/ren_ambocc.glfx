///////////////////////////////////////////////////////////////
// FxConfigs
///////////////////////////////////////////////////////////////
fxconfig fxcfg_default {
  glsl_version = "330";
  import "mathtools.i";
}
///////////////////////////////////////////////////////////////
// Interfaces
///////////////////////////////////////////////////////////////
uniform_set ublock_vtx {
  mat4 MatMVP;
  mat4 MatMVPL;
  mat4 MatMVPR;
  mat4 MatMV;
  mat4 MatM;
  mat4 MatV;
  mat4 MatP;
  mat4 MatAux;

  vec4 modcolor;
  float Time;
}
///////////////////////////////////////////////////////////////
uniform_set ublock_frg {
  vec4 modcolor;
  int numpolys;
  int sample_index;
  sampler2D mesh_texture;
}
///////////////////////////////////////////////////////////////
vertex_interface iface_vdefault : ublock_vtx {
  inputs {
    vec4 position : POSITION;
    vec4 vtxcolor : COLOR0;
    vec3 vtxnormal : NORMAL;
    vec4 uv0 : TEXCOORD0;
  }
  outputs {
    vec3 frg_pos;
    vec3 frg_nrm;
  }
}
///////////////////////////////////////////////////////////////
fragment_interface iface_fmt : ublock_frg {
  inputs {
    vec3 frg_pos;
    vec3 frg_nrm;
  }
  outputs {
    layout(location = 0) vec4 out_clr;
    layout(location = 1) vec4 out_norm;
  }
}
///////////////////////////////////////////////////////////////
// StateBlocks
///////////////////////////////////////////////////////////////
state_block sb_default : default {
  DepthTest = LEQUALS;
  DepthMask = ON;
  CullTest  = OFF;
}
///////////////////////////////////////////////////////////////
vertex_shader vs_vtxcolor : iface_vdefault {
  gl_Position = vec4(position.xy * 2 - vec2(1, 1), 0, 1);
  frg_pos     = vec3(uv0.xyz);
  frg_nrm     = vtxnormal;
}
///////////////////////////////////////////////////////////////
fragment_shader ps_texcolor 
  : iface_fmt
  : lib_math {

  vec3 this_position = frg_pos;
  vec3 this_normal   = normalize(frg_nrm);

  out_clr = vec4(this_position, 1.0);
  out_norm = vec4(this_normal, 1.0);
}

///////////////////////////////////////////////////////////////
technique texcolor {
  fxconfig = fxcfg_default;
  pass p0 {
    vertex_shader   = vs_vtxcolor;
    fragment_shader = ps_texcolor;
    state_block     = sb_default;
  }
}
///////////////////////////////////////////////////////////////
