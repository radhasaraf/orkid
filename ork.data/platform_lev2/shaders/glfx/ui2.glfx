///////////////////////////////////////////////////////////////
// FxConfigs
///////////////////////////////////////////////////////////////
fxconfig fxcfg_default {
	glsl_version = "130";
}
///////////////////////////////////////////////////////////////
state_block sb_ui : default {
	DepthTest=OFF;
	DepthMask=true;
	CullTest=OFF;
	BlendMode = OFF;
}
///////////////////////////////////////////////////////////////
uniform_set ub_ui {
  uvec4 objid;
  vec4 modcolor;
  mat4 mvp;
  sampler2D InstanceMatrices;
  usampler2D InstanceIds;
}
///////////////////////////////////////////////////////////////
vertex_interface iface_vui : ub_ui {
  inputs {
    vec4 position : POSITION;
    vec4 vtxcolor : COLOR0;
  }
  //
  outputs {
    vec4 frg_clr;
  }
}
///////////////////////////////////////////////////////////////
fragment_interface iface_fui : ub_ui {
  inputs {
    vec4 frg_clr;
  }
  outputs {
    layout(location = 0) vec4 out_color;
    layout(location = 1) vec4 out_nrmd;
  }
}
///////////////////////////////////////////////////////////////
fragment_interface iface_fpick : ub_ui {
  inputs {
    vec4 frg_clr;
  }
  outputs {
    layout(location = 0) uvec4 out_iid;
    layout(location = 1) vec4 out_nrmd;
  }
}
///////////////////////////////////////////////////////////////
vertex_shader vs_ui
	: iface_vui {
		gl_Position = mvp*position;
    frg_clr = modcolor;
}
///////////////////////////////////////////////////////////////
vertex_shader vs_vtxcolor
	: iface_vui {
	gl_Position = mvp*position;
    frg_clr = vtxcolor;
}
///////////////////////////////////////////////////////////////
fragment_shader fs_vtxpick
	: iface_fpick {
		//out_iid = uvec4(0x1234,0x5678,0,0xabcd); // comes back as 0xabcd000056781234
		out_iid = uvec4(frg_clr);
    out_nrmd = vec4(0,1,0,0);
}
///////////////////////////////////////////////////////////////
fragment_shader fs_ui
	: iface_fui {
	out_color = frg_clr;
    out_nrmd = vec4(0,1,0,0);
}
///////////////////////////////////////////////////////////////
fragment_shader fs_picking
	: iface_fpick {
		//out_iid = uvec4(0x1234,0x5678,0,0xabcd); // comes back as 0xabcd000056781234
		out_iid = objid;
    out_nrmd = vec4(0,1,0,0);
}
///////////////////////////////////////////////////////////////
technique ui_modcolor {
	fxconfig=fxcfg_default;
	pass p0 {
    vertex_shader=vs_ui;
		fragment_shader=fs_ui;
		state_block=sb_ui;
	}
}
///////////////////////////////////////////////////////////////
technique ui_vtxcolor {
	fxconfig=fxcfg_default;
	pass p0 {
        vertex_shader=vs_vtxcolor;
	    fragment_shader=fs_ui;
		state_block=sb_ui;
	}
}
///////////////////////////////////////////////////////////////
technique ui_vtxpicking {
	fxconfig=fxcfg_default;
	pass p0 {
    vertex_shader=vs_vtxcolor;
		fragment_shader=fs_vtxpick;
		state_block=sb_ui;
	}
}
///////////////////////////////////////////////////////////////
technique ui_picking {
	fxconfig=fxcfg_default;
	pass p0 {
    vertex_shader=vs_ui;
		fragment_shader=fs_picking;
		state_block=sb_ui;
	}
}
