///////////////////////////////////////////////////////////////
// FxConfigs
///////////////////////////////////////////////////////////////
fxconfig fxcfg_default
{
	glsl_version = "150";
}
///////////////////////////////////////////////////////////////
// Interfaces
///////////////////////////////////////////////////////////////
vertex_interface iface_vdefault
{
	uniform mat4        MatMVP;
	uniform mat4        MatM;
	uniform mat4        MatMV;
	uniform mat4        MatP;
	uniform mat4        MatAux;
	uniform vec4		modcolor;
	uniform mat4        User0;
	uniform float		Time;
	uniform vec4		NoiseShift;
	uniform vec4		NoiseFreq;
	uniform vec4		NoiseAmp;

	//uniform mat4 mvp;
	//
	in vec4 position : POSITION;
	in vec4 vtxcolor : COLOR0;
	in vec4 uv0 : TEXCOORD0;
	in vec4 uv1 : TEXCOORD1;
	//
	out vec4 frg_clr;
	out vec4 frg_uv0;
	out vec4 frg_uv1;
}
///////////////////////////////////////////////////////////////
fragment_interface iface_fdefault
{
	in vec4 frg_clr;
	in vec4 frg_uv0;
	in vec4 frg_uv1;
	//
	out vec4 out_clr;
}
///////////////////////////////////////////////////////////////
fragment_interface iface_fmt
{
	uniform vec4 modcolor;
	uniform sampler2D ColorMap;
	uniform sampler3D VolumeMap;
	//
	out vec4 out_clr;
	//
	in vec4 frg_clr;
	in vec4 frg_uv0;
	in vec4 frg_uv1;
}
///////////////////////////////////////////////////////////////
// StateBlocks
///////////////////////////////////////////////////////////////
state_block sb_default
{
	inherits default;
	//DepthTest=LEQUALS;
	//DepthMask=true;
	//CullTest=PASS_FRONT;
}
///////////////////////////////////////////////////////////////
state_block sb_lerpblend
{
	inherits sb_default;
	BlendMode = ADDITIVE;
}
///////////////////////////////////////////////////////////////
state_block sb_additive
{
	inherits sb_default;
	BlendMode = ADDITIVE;
}
///////////////////////////////////////////////////////////////
state_block sb_alpadd
{
	inherits sb_default;
	BlendMode = ALPHA_ADDITIVE;
}
///////////////////////////////////////////////////////////////
// shaders
///////////////////////////////////////////////////////////////
vertex_shader vs_vtxtexcolor : iface_vdefault
{
	gl_Position = MatMVP*position;
	frg_clr = vtxcolor.bgra;
	frg_uv0 = uv0;
	frg_uv1 = uv1;
}
///////////////////////////////////////////////////////////////

fragment_shader ps_modtex : iface_fmt
{
	vec4 texc = texture( ColorMap, frg_uv0.xy );
	out_clr = texc*modcolor;
	if( out_clr.a==0.0f ) discard;
}
fragment_shader ps_modtexclr : iface_fmt
{
	vec4 texc = texture( ColorMap, frg_uv0.xy );
	out_clr = texc*modcolor*frg_clr;
	if( out_clr.a==0.0f ) discard;
}
///////////////////////////////////////////////////////////////
vertex_shader vs_vtxcolor : iface_vdefault
{
	gl_Position = MatMVP*position;
	frg_clr = vtxcolor;
	frg_uv0 = uv0;
	frg_uv1 = uv1;
}
///////////////////////////////////////////////////////////////
fragment_shader ps_fragclr : iface_fdefault
{
	out_clr = frg_clr;
}
///////////////////////////////////////////////////////////////
fragment_shader ps_modclr : iface_fmt
{
	out_clr = modcolor;
}
fragment_shader ps_volume : iface_fmt
{
	vec2 uv = frg_uv0.xy;
	float w = frg_uv1.x;
	vec3 uvw = vec3(uv,w);
    vec4 TexInp0 = texture( VolumeMap, uvw ).xyzw;
	out_clr = TexInp0.bgra*modcolor*frg_clr.bgra;
}
///////////////////////////////////////////////////////////////
technique tbasicparticle
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_vtxtexcolor;
		fragment_shader=ps_modtexclr;
		state_block=sb_default;
	}
}
technique tbasicparticle_pick
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_vtxcolor;
		fragment_shader=ps_modtex;
		state_block=sb_default;
	}
}
technique tvolnoiseparticle
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_vtxcolor;
		fragment_shader=ps_modtex;
		state_block=sb_default;
	}
}
technique tvolumeparticle
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_vtxcolor;
		fragment_shader=ps_volume;
		state_block=sb_alpadd;
	}
}
///////////////////////////////////////////////////////////////
