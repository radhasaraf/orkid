///////////////////////////////////////////////////////////////
// FxConfigs
///////////////////////////////////////////////////////////////
fxconfig fxcfg_default
{
	glsl_version = "150";
	import "skintools.i";
}
///////////////////////////////////////////////////////////////
// Interfaces
///////////////////////////////////////////////////////////////

uniform_block ub_vtx
{
	uniform mat4 WVPMatrix;
	uniform mat4 VPMatrix;
	uniform mat4 PMatrix;
	uniform mat4 WMatrix;
	uniform mat4 WVMatrix;
	uniform mat4 VMatrix;
	uniform mat4 IWMatrix;
	uniform mat3 WRotMatrix;
	uniform mat4 DiffuseMapMatrix;
	uniform mat4 NormalMapMatrix;
	uniform mat4 SpecularMapMatrix;

	uniform vec4 modcolor;
	uniform float time;

	uniform vec3 AmbientLight;
	uniform int NumDirectionalLights;
	uniform vec3 DirectionalLightDir[4];
	uniform vec3 DirectionalLightColor[4];
	uniform vec3 EmissiveColor;

	uniform vec3 WCamLoc;
	uniform float SpecularPower;	
}

vertex_interface iface_vdefault
	: iface_skintools // inherit skinned unis/attrs
	: ub_vtx
{
	in vec4 position : POSITION;
	in vec3 normal : NORMAL;
	in vec2 uv0 : TEXCOORD0;

	out vec4 frg_clr;
	out vec2 frg_uv0;
}
///////////////////////////////////////////////////////////////
fragment_interface iface_fdefault
{
	in vec4 frg_clr;
	in vec2 frg_uv0;

	out vec4 out_clr;
}
///////////////////////////////////////////////////////////////

uniform_block ub_frg
{
	uniform vec4 modcolor;
	uniform sampler2D DiffuseMap;	
}

fragment_interface iface_fmt
	: ub_frg
{
	in vec4 frg_clr;
	in vec2 frg_uv0;

	out vec4 out_clr;
}
///////////////////////////////////////////////////////////////
// StateBlocks
///////////////////////////////////////////////////////////////
state_block sb_default
{
	//BlendMode = ADDITIVE;
	DepthTest=LESS;
	DepthMask=true;
	CullTest=PASS_FRONT;
}
///////////////////////////////////////////////////////////////
state_block sb_lerpblend : sb_default
{
	BlendMode = ALPHA;
}
///////////////////////////////////////////////////////////////
state_block sb_additive : sb_default
{
	BlendMode = ADDITIVE;
}
///////////////////////////////////////////////////////////////
// shaders
///////////////////////////////////////////////////////////////
vertex_shader vs_vtxtexcolor : iface_vdefault
{
	gl_Position = WVPMatrix*position;
	frg_clr = vec4(1.0f,1.0f,1.0f,1.0f); //vtxcolor.bgra;
	frg_uv0 = uv0;
	//frg_uv1 = uv1;
}

///////////////////////////////////////////////////////////////
vertex_shader vs_wnormal : iface_vdefault
{
	gl_Position = WVPMatrix*position;
	vec3 wnorm = normalize(WRotMatrix*normal);
	frg_clr = vec4(wnorm.xyz,1.0);
	frg_uv0 = uv0;
}

///////////////////////////////////////////////////////////////
vertex_shader vs_wnormalsk 
	: iface_vdefault
	: skin_tools
{
	vec3 obj_pos = position.xyz;
	vec3 skn_pos = SkinPosition( boneindices, boneweights, position.xyz );
	gl_Position = WVPMatrix*vec4(skn_pos,1.0);
	vec3 sknorm = SkinNormal(boneindices, boneweights, normal.xyz);
	vec3 wnorm = normalize(WRotMatrix*sknorm);
	frg_clr = vec4(wnorm.xyz,1.0);
	frg_uv0 = uv0;
}

///////////////////////////////////////////////////////////////

fragment_shader ps_modtex : iface_fmt
{
	vec4 texc = texture( DiffuseMap, frg_uv0 );
	out_clr = texc*modcolor*frg_clr;
	if( out_clr.a==0.0f ) discard;
}
///////////////////////////////////////////////////////////////
vertex_shader vs_vtxcolor : iface_vdefault
{
	gl_Position = WVPMatrix*position;
	//frg_clr = vtxcolor;
	frg_clr = vec4(1.0f,0.0f,0.0f,1.0f); //vtxcolor.bgra;
	frg_uv0 = uv0;
	//frg_uv1 = uv0;
}
///////////////////////////////////////////////////////////////
fragment_shader ps_fragclr : iface_fdefault
{
	out_clr = frg_clr;
}
fragment_shader ps_wnormalsk : iface_fdefault
{
	out_clr = vec4(0,1,0,1);//frg_clr;
}

///////////////////////////////////////////////////////////////
fragment_shader ps_modclr : iface_fmt
{
	out_clr = frg_clr;
	//out_clr = modcolor;
}
///////////////////////////////////////////////////////////////
technique tek_lamberttex
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_vtxcolor;
		fragment_shader=ps_fragclr;
		state_block=sb_lerpblend;
	}
}
technique tek_modcolor
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_vtxcolor;
		fragment_shader=ps_modclr;
		state_block=sb_default;
	}
}
technique tek_wnormal
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_wnormal;
		fragment_shader=ps_fragclr;
		state_block=sb_default;
	}
}
technique tek_wnormal_skinned
{	fxconfig=fxcfg_default;
	pass p0
	{	vertex_shader=vs_wnormalsk;
		fragment_shader=ps_fragclr;
		state_block=sb_default;
	}
}
///////////////////////////////////////////////////////////////
