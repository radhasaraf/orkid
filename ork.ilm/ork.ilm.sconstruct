import os, glob, string
import ork.build.utils as obu
import ork.build.common as cmn
import ork.build.slnprj as sln
from ork.build.pathtools import path

###########################################

TARGET = string.join(COMMAND_LINE_TARGETS)
is_get = (TARGET=="get")
is_ilm = (TARGET=="ilm")
DL_DIR = obu.download_dir
STAGE_DIR = obu.stage_dir
###########################################

def set_env(k,v):
    os.environ[k] = v

###########################################

githash = "e98d25b30138634be20d925d7fe6d109311b2a06"

if is_get:
    ctx = obu.context( obu.download_dir )
    ctx.gitget( "https://github.com/openexr/openexr", "openexr", githash )

###########################################

if is_ilm:
    print "Building ILM!"
    EXRBASE = path(obu.extbuild_dir)/"openexr"
    os.system( "rm -rf %s/include/OpenEXR" % STAGE_DIR )
    os.system( "rm -rf %s/bin/exr*" % STAGE_DIR )

    EXRBASE.rmtree()
    obu.myexec( "cp -r %s/openexr %s" % (obu.download_dir, EXRBASE) )

    if True: # IlmBase
        ILMBASE = EXRBASE/"IlmBase"
        ILMBUILDDIR = ILMBASE/".stage"

        args =  " -DCMAKE_INSTALL_PREFIX="+STAGE_DIR
        args += " -DCMAKE_C_COMPILER=clang"
        args += " -DCMAKE_CXX_COMPILER=clang++"

        ILMBUILDDIR.mkdir(clean=True)
        ILMBUILDDIR.chdir()
        os.system("cmake %s ../" % args )
        os.system("make -j %d install" % obu.num_cores)

    if True: # OpenExr
        OEXBASE = EXRBASE/"OpenExr"
        OEXBUILDDIR = ILMBASE/".stage"

        args = "-DCMAKE_INSTALL_PREFIX="+STAGE_DIR
        set_env("CMAKE_C_COMPILER","clang")
        set_env("CMAKE_CXX_COMPILER","clang++")

        OEXBUILDDIR.mkdir(clean=True)
        OEXBUILDDIR.chdir()
        os.system("cmake %s ../" % args )
        os.system("make -j %d install" % obu.num_cores)

    print "ILM build complete.."

###########################################



