///////////////////////////////////////////////////////////////////////////////

#pragma once

///////////////////////////////////////////////////////////////////////////////

#include <ROP/ROP_Node.h>

///////////////////////////////////////////////////////////////////////////////
namespace ork::hfs {
///////////////////////////////////////////////////////////////////////////////

struct DumpNodes final : public ROP_Node {

  DumpNodes(OP_Network* net, const char* name, OP_Operator* entry);
  ~DumpNodes() final;

  int startRender(int nframes, fpreal s, fpreal e) final;
  ROP_RENDER_CODE renderFrame(fpreal time, UT_Interrupt* boss) final;
  ROP_RENDER_CODE endRender() final;

  template <typename T> //
  T fetchParameter(const UT_String& key, fpreal t);

  fpreal _startTime = 0.0f;
  fpreal _endTime = 0.0f;
};

///////////////////////////////////////////////////////////////////////////////
} // namespace ork::hfs

