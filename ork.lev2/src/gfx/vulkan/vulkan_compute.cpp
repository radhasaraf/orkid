#include "vulkan_ctx.h"

#if defined(ENABLE_COMPUTE_SHADERS)

///////////////////////////////////////////////////////////////////////////////
namespace ork::lev2::vulkan {
///////////////////////////////////////////////////////////////////////////////

VkComputeInterface::VkComputeInterface(vkcontext_rawptr_t ctx)
    : ComputeInterface()
    , _contextVK(ctx) {

}

///////////////////////////////////////////////////////////////////////////////

void VkComputeInterface::dispatchCompute(
    const FxComputeShader* shader,
    uint32_t numgroups_x,
    uint32_t numgroups_y,
    uint32_t numgroups_z) {
}

///////////////////////////////////////////////////////////////////////////////

void VkComputeInterface::dispatchComputeIndirect(const FxComputeShader* shader, int32_t* indirect) {
}

///////////////////////////////////////////////////////////////////////////////

FxShaderStorageBuffer* VkComputeInterface::createStorageBuffer(size_t length) {
  return nullptr;
}

///////////////////////////////////////////////////////////////////////////////

storagebuffermappingptr_t VkComputeInterface::mapStorageBuffer(FxShaderStorageBuffer* b, size_t base, size_t length) {
  return nullptr;
}

///////////////////////////////////////////////////////////////////////////////

void VkComputeInterface::unmapStorageBuffer(FxShaderStorageBufferMapping* mapping) {
}

///////////////////////////////////////////////////////////////////////////////

void VkComputeInterface::bindStorageBuffer(const FxComputeShader* shader, uint32_t binding_index, FxShaderStorageBuffer* buffer) {
}

///////////////////////////////////////////////////////////////////////////////

void VkComputeInterface::bindImage(const FxComputeShader* shader, uint32_t binding_index, Texture* tex, ImageBindAccess access) {
}

///////////////////////////////////////////////////////////////////////////////

//PipelineCompute* VkComputeInterface::createComputePipe(ComputeShader* csh) {
  //return nullptr;
//}

///////////////////////////////////////////////////////////////////////////////

//void VkComputeInterface::bindComputeShader(ComputeShader* csh) {
//}

///////////////////////////////////////////////////////////////////////////////
} // namespace ork::lev2::vulkan
///////////////////////////////////////////////////////////////////////////////

#endif