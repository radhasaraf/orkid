////////////////////////////////////////////////////////////////
// Orkid Media Engine
// Copyright 1996-2023, Michael T. Mayers.
// Distributed under the MIT License.
// see license-mit.txt in the root of the repo, and/or https://opensource.org/license/mit/
////////////////////////////////////////////////////////////////

#include <ork/lev2/gfx/shadlang.h>

namespace ork::lev2::shadlang {
using namespace SHAST;
/////////////////////////////////////////////////////////////////////////////////////////////////

struct GLFX1Backend {
  ////////////////////////////////////////////////////////////////
  void _visit(astnode_ptr_t node) {
    _node_stack.push(node);
    ///////////////////////////////////////////////
    // pre-visit
    ///////////////////////////////////////////////
    ///////////////////////////////////////////////
    for (auto c : node->_children) {
      _visit(c);
    }
    ///////////////////////////////////////////////
    // post-visit
    ///////////////////////////////////////////////
    ///////////////////////////////////////////////
    _node_stack.pop();
  }
  ////////////////////////////////////////////////////////////////
  void generate(translationunit_ptr_t top) {
    _visit(top);
  }
  ////////////////////////////////////////////////////////////////
  std::string _outstr;
  std::stack<astnode_ptr_t> _node_stack;
};

/////////////////////////////////////////////////////////////////////////////////////////////////

std::string toGLFX1(translationunit_ptr_t top) {
  auto backend = std::make_shared<GLFX1Backend>();
  backend->generate(top);
  return backend->_outstr;
}

/////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace ork::lev2::shadlang
