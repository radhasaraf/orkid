////////////////////////////////////////////////////////////////
// Orkid Media Engine
// Copyright 1996-2022, Michael T. Mayers.
// Distributed under the Boost Software License - Version 1.0 - August 17, 2003
// see http://www.boost.org/LICENSE_1_0.txt
//////////////////////////////////////////////////////////////// 

#pragma once 

///////////////////////////////////////////////////////////////////////////////

#include <ork/config/config.h>
#include <ork/object/Object.h>

///////////////////////////////////////////////////////////////////////////////
namespace ork{
///////////////////////////////////////////////////////////////////////////////

namespace reflect { class IDeserializer; }

///////////////////////////////////////////////////////////////////////////////

struct GradientBase : public ork::Object {
	RttiDeclareConcrete(GradientBase, ork::Object);
public: 
	GradientBase();
};

///////////////////////////////////////////////////////////////////////////////

template <typename T> struct GradLut : public orklut<float,T>
{
	
};

///////////////////////////////////////////////////////////////////////////////

template <typename T> //
struct Gradient : public GradientBase { //

	DECLARE_TRANSPARENT_TEMPLATE_RTTI(Gradient<T>, GradientBase);

public: 

  Gradient();

	void addDataPoint( float flerp, const T& data );
	T sample( float atlerp );

  bool preDeserialize( ork::reflect::serdes::IDeserializer& deser );

  GradLut<T> _data;

};

using gradient_fvec4 = Gradient<ork::fvec4>;

///////////////////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////////////////
