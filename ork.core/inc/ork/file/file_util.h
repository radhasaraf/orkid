////////////////////////////////////////////////////////////////
// Orkid Media Engine
// Copyright 1996-2023, Michael T. Mayers.
// Distributed under the MIT License.
// see license-mit.txt in the root of the repo, and/or https://opensource.org/license/mit/
////////////////////////////////////////////////////////////////

#pragma once

///////////////////////////////////////////////////////////////////////////////
#include <ork/kernel/string/MutableString.h>
#include <ork/kernel/string/PieceString.h>
#include <ork/stream/InputStreamBuffer.h>

///////////////////////////////////////////////////////////////////////////////
namespace ork { namespace stream {
///////////////////////////////////////////////////////////////////////////////

class IInputStream;

///////////////////////////////////////////////////////////////////////////////
}} // namespace ork::stream
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
namespace ork { namespace file {
///////////////////////////////////////////////////////////////////////////////

bool ReadLine(ork::stream::InputStreamBuffer<128>& file, char* buffer, int maxlen);

///////////////////////////////////////////////////////////////////////////////

template <typename IsDelim> void Word(ork::MutableString result, const char* buffer, int& index, int buf_size, IsDelim delim) {
  while (index < buf_size && buffer[index] && delim(buffer[index]))
    index++;
  int wordstart = index;
  while (index < buf_size && buffer[index] && !delim(buffer[index]))
    index++;
  int wordend = index;
  while (index < buf_size && buffer[index] && delim(buffer[index]))
    index++;
  result = ork::PieceString(buffer + wordstart, ork::PieceString::size_type(wordend - wordstart));
}

///////////////////////////////////////////////////////////////////////////////
void Word(ork::MutableString result, const char* buffer, int& index, int buf_size);
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
}} // namespace ork::file
///////////////////////////////////////////////////////////////////////////////
