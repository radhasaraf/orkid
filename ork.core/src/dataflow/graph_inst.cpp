////////////////////////////////////////////////////////////////
// Orkid Media Engine
// Copyright 1996-2022, Michael T. Mayers.
// Distributed under the Boost Software License - Version 1.0 - August 17, 2003
// see http://www.boost.org/LICENSE_1_0.txt
////////////////////////////////////////////////////////////////

#include <ork/pch.h>

#include <ork/application/application.h>
#include <ork/dataflow/dataflow.h>
#include <ork/dataflow/scheduler.h>
#include <ork/kernel/orklut.hpp>
///////////////////////////////////////////////////////////////////////////////
namespace ork { namespace dataflow {
///////////////////////////////////////////////////////////////////////////////
GraphInst::GraphInst(graphdata_ptr_t gdata)
    : _graphdata(gdata)
    , _scheduler(nullptr)
    , _inProgress(false) {
}
///////////////////////////////////////////////////////////////////////////////
GraphInst::~GraphInst() {
}
///////////////////////////////////////////////////////////////////////////////
void GraphInst::clear() {
  _ordered_module_datas.clear();
  _ordered_module_insts.clear();
  _scheduler        = nullptr;
  _inProgress      = false;
}
///////////////////////////////////////////////////////////////////////////////
void GraphInst::updateTopology(topology_ptr_t topo){
  _ordered_module_datas = topo->_flattened;
  ////////////////////////////////////////////////
  // create module insts
  ////////////////////////////////////////////////
  for( auto data : _ordered_module_datas ){
    auto module_inst = data->createInstance();
    _ordered_module_insts.push_back(module_inst);
  }
  ////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////////////////
bool GraphInst::isDirty(void) const {
  return false;
}
///////////////////////////////////////////////////////////////////////////////
bool GraphInst::isPending() const {
  return _inProgress;
}
///////////////////////////////////////////////////////////////////////////////
void GraphInst::setPending(bool bv) {
  _inProgress = bv;
}
///////////////////////////////////////////////////////////////////////////////
}} // namespace ork::dataflow
///////////////////////////////////////////////////////////////////////////////
